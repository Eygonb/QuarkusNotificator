quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN
quarkus.mailer.from=${MAILER_USER}
quarkus.mailer.host=${SMTP_HOST}
quarkus.mailer.port=${SMTP_PORT}
quarkus.mailer.start-tls=REQUIRED
quarkus.mailer.username=${MAILER_USER}
quarkus.mailer.password=${MAILER_PASS}
quarkus.mailer.trust-all=true
quarkus.mailer.mock=false

bot.name=${BOT_NAME}
bot.token=${BOT_TOKEN}

mp.messaging.incoming.notifications.bootstrap.servers=${KAFKA_URL}
mp.messaging.incoming.notifications.topic=notifications
mp.messaging.incoming.notifications.connector=smallrye-kafka
mp.messaging.incoming.notifications.value.deserializer=com.vacancinated.kafka.serialization.NotificationDeserializer

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DB_USER}
quarkus.datasource.password=${DB_PASS}
quarkus.datasource.jdbc.url=${NG_DB_URL}
quarkus.hibernate-orm.database.generation=none


# Flyway minimal config properties
quarkus.flyway.migrate-at-start=true

# Flyway optional config properties
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=1.0.0
quarkus.flyway.baseline-description=Initial version
quarkus.flyway.connect-retries=10
quarkus.flyway.schemas=public
# quarkus.flyway.table=notification_addresses
quarkus.flyway.locations=db/migration
# quarkus.flyway.sql-migration-prefix=X
# quarkus.flyway.repeatable-sql-migration-prefix=K

# Jwt authentication configuration
mp.jwt.verify.publickey.location=publicKey.pem
mp.jwt.verify.issuer=${KEYCLOAK_ISSUER}
quarkus.native.resources.includes=publicKey.pem

quarkus.http.cors=true
quarkus.http.cors.origins=${UI_URL}
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.exposed-headers=X-Total-Count
quarkus.http.cors.methods=GET, PUT, DELETE, POST

quarkus.http.port=8080